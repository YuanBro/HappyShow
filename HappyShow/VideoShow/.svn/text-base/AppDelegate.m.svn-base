//
//  AppDelegate.m
//  VideoShow
//
//  Created by Jerry Chen  on 14-7-15.
//  Copyright (c) 2014年 energy. All rights reserved.
//

#import "AppDelegate.h"
#import "UMSocial.h"
#import "UMSocialInstagramHandler.h"
#import "UMSocialSinaHandler.h"
#import "UMSocialWechatHandler.h"
#import "UMSocialFacebookHandler.h"
#import "UMSocialTwitterHandler.h"
#import "UMessage.h"
#import "MobClick.h"
#import <CoreData/CoreData.h>
#import "AppMacros.h"
#import "FileHandle.h"
#import "Prefs.h"
#import <FBSDKShareKit/FBSDKShareKit.h>
#import "DownloadingSticker+CoreData.h"
#import "UIImage+Util.h"
#import "RotateNavigationController.h"
//#import "CustomTabbarController.h"
#import "MainViewController.h"
#import "GuideViewController.h"
#import "MusicViewController.h"

#import <Bugtags/Bugtags.h> //集成Bug测试

#define UMSYSTEM_VERSION_GREATER_THAN_OR_EQUAL_TO(v) ([[[UIDevice currentDevice] systemVersion] compare:v options:NSNumericSearch] != NSOrderedAscending)
#define _IPHONE80_ 80000

@implementation AppDelegate


@synthesize managedObjectContext=_managedObjectContext;
@synthesize managedObjectModel=_managedObjectModel;
@synthesize persistentStoreCoordinator=_persistentStoreCoordinator;

- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions
{
//    //集成Bug测试
//    BugtagsOptions *options = [[BugtagsOptions alloc] init];
//    options.trackingCrashes = YES;
//    [Bugtags startWithAppKey:@"4ba3d19641582a0a0b633bfd62cfc3c8" invocationEvent:BTGInvocationEventBubble options:options];
//    [Bugtags startWithAppKey:@"4ba3d19641582a0a0b633bfd62cfc3c8" invocationEvent:BTGInvocationEventBubble];
    
    self.window=[[UIWindow alloc] initWithFrame:[UIScreen mainScreen].bounds];
    // Override point for customization after application launch.
    application.statusBarStyle = UIStatusBarStyleLightContent;
    application.idleTimerDisabled = YES;
    //[Prefs saveGuideFlag:NO];

    //if([Prefs getGuideFlag]){
        MainViewController * mainControl = [[MainViewController alloc] init];
        self.window.rootViewController=mainControl;
    //}else{//需要显示引导页
      //  GuideViewController *guideControl = [[GuideViewController alloc] init];
      //  RotateNavigationController * mainControl = [[RotateNavigationController alloc] initWithRootViewController:guideControl];
      //  self.window.rootViewController=mainControl;
    //}
    
    [self.window makeKeyAndVisible];
    
    //umeng analyze
    [self setUMAnalyze];
    [self registerUMSNS];
    //[self splashAnim];
    //[FBLoginView class];
    //UMeng message
    [UMessage startWithAppkey:umeng_key launchOptions:launchOptions];
    [self registerUMengMessage];
    
//    NSLog(@"doc path=%@  uuid=%@",[FileHandle getDocumentDir],[[[UIDevice currentDevice] identifierForVendor] UUIDString]);
    
    return YES;
}

- (void)application:(UIApplication *)application didRegisterForRemoteNotificationsWithDeviceToken:(NSData *)deviceToken
{
//    NSLog(@"deviceToken===%@",deviceToken);
    [UMessage registerDeviceToken:deviceToken];
}

- (void)application:(UIApplication *)application didReceiveRemoteNotification:(NSDictionary *)userInfo
{
    if ([Prefs getMessagePushFlag]) {
        [UMessage didReceiveRemoteNotification:userInfo];
    }
    
}

- (void)application:(UIApplication *)application didFailToRegisterForRemoteNotificationsWithError:(NSError *)error {
    NSLog(@"Register Remote Notification Error: %@", error);
}

/** 注册消息通知 */
- (void)registerUMengMessage
{
#if __IPHONE_OS_VERSION_MAX_ALLOWED >= _IPHONE80_
    if(UMSYSTEM_VERSION_GREATER_THAN_OR_EQUAL_TO(@"8.0"))
    {
        //register remoteNotification types
        UIMutableUserNotificationAction *action1 = [[UIMutableUserNotificationAction alloc] init];
        action1.identifier = @"action1_identifier";
        action1.title=@"Accept";
        action1.activationMode = UIUserNotificationActivationModeForeground;//当点击的时候启动程序
        
        UIMutableUserNotificationAction *action2 = [[UIMutableUserNotificationAction alloc] init];  //第二按钮
        action2.identifier = @"action2_identifier";
        action2.title=@"Reject";
        action2.activationMode = UIUserNotificationActivationModeBackground;//当点击的时候不启动程序，在后台处理
        action2.authenticationRequired = YES;//需要解锁才能处理，如果action.activationMode = UIUserNotificationActivationModeForeground;则这个属性被忽略；
        action2.destructive = YES;
        
        UIMutableUserNotificationCategory *categorys = [[UIMutableUserNotificationCategory alloc] init];
        categorys.identifier = @"category1";//这组动作的唯一标示
        [categorys setActions:@[action1,action2] forContext:(UIUserNotificationActionContextDefault)];
        
        UIUserNotificationSettings *userSettings = [UIUserNotificationSettings settingsForTypes:UIUserNotificationTypeBadge|UIUserNotificationTypeSound|UIUserNotificationTypeAlert
                                                                                     categories:[NSSet setWithObject:categorys]];
        [UMessage registerRemoteNotificationAndUserNotificationSettings:userSettings];
        
    } else{
        //register remoteNotification types
        [UMessage registerForRemoteNotificationTypes:UIRemoteNotificationTypeBadge
         |UIRemoteNotificationTypeSound
         |UIRemoteNotificationTypeAlert];
    }
#else
    //register remoteNotification types
    
    //- (void)registerForRemoteNotificationTypes:(UIRemoteNotificationType)types NS_DEPRECATED_IOS(3_0, 8_0, "Please use registerForRemoteNotifications and registerUserNotificationSettings: instead");
    
    [UMessage registerForRemoteNotificationTypes:UIRemoteNotificationTypeBadge
     |UIRemoteNotificationTypeSound
     |UIRemoteNotificationTypeAlert];
#endif
    //for log
    [UMessage setLogEnabled:NO];
}

-(void) splashAnim
{
    UIView * rootView=[[UIView alloc] initWithFrame:self.window.bounds];
    rootView.backgroundColor=[UIColor whiteColor];
    [self.window addSubview:rootView];
    UIImageView *splashIcon = [[UIImageView alloc] initWithFrame:CGRectMake(0, 0, 80, 80)];
    splashIcon.center=CGPointMake(rootView.center.x, -60);
    splashIcon.contentMode=UIViewContentModeScaleAspectFit;
    UIImage * appImage=[UIImage imageResource:@"Icon.png"];
    splashIcon.image = appImage;
    [rootView addSubview:splashIcon];
    
    UILabel * appLabel=[[UILabel alloc] initWithFrame:CGRectMake(0,0,[UIScreen mainScreen].bounds.size.width,20)];
    appLabel.textAlignment=NSTextAlignmentCenter;
    appLabel.textColor=[UIColor grayColor];
    appLabel.font=[UIFont systemFontOfSize:17];
    appLabel.text=NSLocalizedString(@"CFBundleDisplayName", nil);
    appLabel.backgroundColor=[UIColor clearColor];
    appLabel.center=CGPointMake(rootView.center.x, rootView.center.y+65);
    appLabel.alpha=0.0f;
    [rootView addSubview:appLabel];
    
    UILabel * launchLabel=[[UILabel alloc] initWithFrame:CGRectMake(0,0,[UIScreen mainScreen].bounds.size.width,20)];
    launchLabel.textAlignment=NSTextAlignmentCenter;
    launchLabel.textColor=[UIColor grayColor];
    launchLabel.font=[UIFont systemFontOfSize:17];
    launchLabel.text=NSLocalizedString(@"Launch Hint", nil);
    launchLabel.backgroundColor=[UIColor clearColor];
    
    launchLabel.center=CGPointMake(rootView.center.x,rootView.center.y+125);
    launchLabel.alpha=0.0f;
    [rootView addSubview:launchLabel];
    
    [UIView animateWithDuration:2.0 animations:^{
        CATransform3D appTran=CATransform3DMakeTranslation(0, 150, 0);
        splashIcon.layer.transform=appTran;
        
        CATransform3D upTran=CATransform3DMakeTranslation(0, -100, 0);
        launchLabel.layer.transform = upTran;
        appLabel.layer.transform=upTran;
        launchLabel.alpha = 1.0;
        appLabel.alpha=1.0;
    } completion:^(BOOL finished) {
        [UIView animateWithDuration:1.0f animations:^{
            CATransform3D transform = CATransform3DMakeScale(1.5, 1.5, 1.0);
            rootView.layer.transform = transform;
            rootView.alpha = 0.0;
        } completion:^(BOOL finished){
            [rootView removeFromSuperview];
        }];
    }];
}

+ (AppDelegate *) shareInstance{
    return (AppDelegate *)[UIApplication sharedApplication].delegate;
}

- (void)setUMAnalyze
{
    [MobClick startWithAppkey:umeng_key reportPolicy:BATCH channelId:nil];
    NSString *version = [[[NSBundle mainBundle] infoDictionary] objectForKey:@"CFBundleShortVersionString"];
    [MobClick setAppVersion:version];
}

-(void) registerUMSNS
{
    //log
    [UMSocialData openLog:YES];
    
    //umeng appkey
    [UMSocialData setAppKey:umeng_key];
    
    //instagram
    [UMSocialInstagramHandler openInstagramWithScale:NO paddingColor:[UIColor blackColor]];
    
    //sina weibo sso
    [UMSocialSinaHandler openSSOWithRedirectURL:@"http://sns.whalecloud.com/sina2/callback"];
    
    //wechat
    [UMSocialWechatHandler setWXAppId:wechat_key appSecret:wechat_secret url:nil];
    
    //facebook
    //设置facebook应用ID及URL
    [UMSocialFacebookHandler setFacebookAppID:facebook_key shareFacebookWithURL:@"http://www.umeng.com/social"];
    
    //twitter
    [UMSocialTwitterHandler openTwitter];
    // 集成的TwitterSDK仅在iOS7.0以上有效，在iOS 6.x上自动调用系统内置Twitter授权
    if (UMSYSTEM_VERSION_GREATER_THAN_OR_EQUAL_TO(@"7.0")) {
        [UMSocialTwitterHandler setTwitterAppKey:@"fB5tvRpna1CKK97xZUslbxiet" withSecret:@"YcbSvseLIwZ4hZg9YmgJPP5uWzd4zr6BpBKGZhf07zzh3oj62K"];
    }
    
}

- (BOOL)application:(UIApplication *)application handleOpenURL:(NSURL *)url {
    if ([[url scheme] isEqualToString:@"videoshow"]) {
//        NSString*text = [[url host] stringByReplacingPercentEscapesUsingEncoding:NSUTF8StringEncoding];
//        UIAlertView *alertView = [[UIAlertView alloc] initWithTitle:@"Text"
//                                               message:text
//                                              delegate:nil
//                                     cancelButtonTitle:@"OK"
//                                     otherButtonTitles:nil];
        //[alertView show];
        return YES;
    }
    return NO;
}

- (void)applicationWillResignActive:(UIApplication *)application
{
    [[NSNotificationCenter defaultCenter] postNotificationName:kNotificationWillResignActive object:nil];
}

//app进入后台
- (void)applicationDidEnterBackground:(UIApplication *)application
{
    [[NSNotificationCenter defaultCenter] postNotificationName:kNotificationEnterBackground object:nil];
}

- (void)applicationWillEnterForeground:(UIApplication *)application
{
    // Called as part of the transition from the background to the inactive state; here you can undo many of the changes made on entering the background.
}

//app进入前台
- (void)applicationDidBecomeActive:(UIApplication *)application
{
    [[NSNotificationCenter defaultCenter] postNotificationName:kNotificationBecomeActive object:nil];
    [UMSocialSnsService  applicationDidBecomeActive];
    //[FBAppEvents activateApp];
}

- (BOOL)application:(UIApplication *)application openURL:(NSURL *)url sourceApplication:(NSString *)sourceApplication annotation:(id)annotation
{
//    if([sourceApplication isEqualToString:@"com.facebook.Facebook"] || [[url absoluteString] hasPrefix:@"fb867638153270399"]){
//        // return [FBAppCall handleOpenURL:url sourceApplication:sourceApplication];
//        return YES;
//    }else{
//        return [UMSocialSnsService handleOpenURL:url];
//    }
    return [UMSocialSnsService handleOpenURL:url];
}

/** 应用结束时保存数据 */
- (void)applicationWillTerminate:(UIApplication *)application {
    [DownloadingSticker deleteAll];
    // Saves changes in the application's managed object context before the application terminates.
    [self saveContext];
}

#pragma mark -
#pragma mark - Private Methods

- (void)saveContext {
    NSError *error = nil;
    NSManagedObjectContext *managedObjectContext = self.managedObjectContext;
    if (managedObjectContext != nil) {
        if ([managedObjectContext hasChanges] && ![managedObjectContext save:&error]) {
            abort();
        }
    }
}

#pragma mark - 主要有三个方法
#pragma mark - Core Data stack

// Returns the managed object context for the application.
// If the context doesn't already exist, it is created and bound to the persistent store coordinator for the application.
- (NSManagedObjectContext *)managedObjectContext {
    if (_managedObjectContext != nil) {
        return _managedObjectContext;
    }
    
    NSPersistentStoreCoordinator *coordinator = [self persistentStoreCoordinator];
    if (coordinator != nil) {
        _managedObjectContext = [[NSManagedObjectContext alloc] init];
        [_managedObjectContext setPersistentStoreCoordinator:coordinator];
    }
    return _managedObjectContext;
}

// Returns the managed object model for the application.
// If the model doesn't already exist, it is created from the application's model.
- (NSManagedObjectModel *)managedObjectModel {
    if (_managedObjectModel != nil) {
        return _managedObjectModel;
    }
    
    NSURL *modelURL = [[NSBundle mainBundle] URLForResource:[NSString stringWithFormat:@"%@",DB_NAME] withExtension:@"momd"];
    _managedObjectModel = [[NSManagedObjectModel alloc] initWithContentsOfURL:modelURL];
    return _managedObjectModel;
}

// Returns the persistent store coordinator for the application.
// If the coordinator doesn't already exist, it is created and the application's store added to it.
- (NSPersistentStoreCoordinator *)persistentStoreCoordinator {
    if (_persistentStoreCoordinator != nil) {
        return _persistentStoreCoordinator;
    }
    //为了数据库数据顺利迁移，数据库名字保持Version1.2(VideoShow1.2.sqlite)中的名字（这个名字一定不能改，否则用户更新后，数据全部丢失）
    NSString* sqliteName = @"VideoShow1.2.sqlite";
    NSURL *storeURL = [[self applicationDocumentsDirectory] URLByAppendingPathComponent:sqliteName];
    
    NSError *error = nil;
    _persistentStoreCoordinator = [[NSPersistentStoreCoordinator alloc] initWithManagedObjectModel:[self managedObjectModel]];
    
    // 升级目录
    NSDictionary *optionsDictionary = [NSDictionary dictionaryWithObjectsAndKeys:[NSNumber numberWithBool:YES],NSMigratePersistentStoresAutomaticallyOption, [NSNumber numberWithBool:YES],NSInferMappingModelAutomaticallyOption, nil];
    
    if (![_persistentStoreCoordinator addPersistentStoreWithType:NSSQLiteStoreType
                                                   configuration:nil
                                                             URL:storeURL
                                                         options:optionsDictionary error:&error]) {
        abort();
    }
    
    return _persistentStoreCoordinator;
}

#pragma mark -
#pragma mark - Application's Documents directory

// Returns the URL to the application's Documents directory.
- (NSURL *)applicationDocumentsDirectory {
    return [[[NSFileManager defaultManager] URLsForDirectory:NSDocumentDirectory
                                                   inDomains:NSUserDomainMask] lastObject];
}
@end
