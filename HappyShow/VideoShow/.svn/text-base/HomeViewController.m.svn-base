//
//  HomeViewController.m
//  VideoShow
//
//  Created by Jerry Chen  on 14-7-15.
//  Copyright (c) 2014年 energy. All rights reserved.
//

#import "HomeViewController.h"
#import "AlbumsViewController.h"
#import "MyStudioViewController.h"
#import "PlayerViewController.h"
#import "AdViewController.h"
#import "MobClick.h"
#import "JSONKit.h"
#import "qxTimeline+Util.h"
#import "AdObject.h"
#import "qxTimeline.h"
#import "MBProgressHUD.h"
#import "Util.h"
#import "UIImageView+WebCache.h"
#import "RotateNavigationController.h"
#import "AppEvent.h"
#import "Prefs.h"
#import "AppMacros.h"
#import "Colors.h"
#import "BaseService.h"
#import "UIImage+Util.h"
#import "UIColor+Util.h"
#import "TouchableView.h"
#import "AnimationsUtil.h"
#import "SDCycleScrollView.h"
#import "MaterialStoreViewController.h"
static float adRatio = 736/430.0;//海报组件的宽高比例
@interface HomeViewController()<UIScrollViewDelegate,UIImagePickerControllerDelegate,UINavigationControllerDelegate,SDCycleScrollViewDelegate>
{
    
    CGRect screenBounds;
    __block NSString *savedVideoPath;
}

@property (nonatomic,assign) float AdImageHeight;
@property (nonatomic,strong) SDCycleScrollView *mAdView;
@property (nonatomic,strong) NSMutableArray *adlist;;

@end

@implementation HomeViewController

@synthesize AdImageHeight;
@synthesize mainDelegate;
@synthesize mAdView;
@synthesize adlist;

#pragma mark - ViewController life cycle
- (void)viewDidLoad
{
    [super viewDidLoad];
    self.view.backgroundColor = [UIColor whiteColor];
    //view
    screenBounds = [UIScreen mainScreen].bounds;
    AdImageHeight = screenBounds.size.width/adRatio;
    if ([self heightLessThan480]) {
        AdImageHeight-=50;
    }
    NSLog(@"===>%f   %f   %f",AdImageHeight,screenBounds.size.width,adRatio);
    //ad
    self.mAdView = [[SDCycleScrollView alloc] initWithFrame:CGRectMake(0, 0, screenBounds.size.width, AdImageHeight)];
    mAdView.pageControlAliment = SDCycleScrollViewPageContolAlimentRight;
    mAdView.delegate = self;
    mAdView.autoScrollTimeInterval=5.0;
    mAdView.dotColor = [UIColor whiteColor]; // 自定义分页控件小圆标颜色
    mAdView.placeholderImage = [UIImage imageResource:@"ad_poster.png"];
    
    [self.view addSubview:mAdView];
    
    float starty= AdImageHeight;
    float funcHeight = screenBounds.size.height - 64 - starty - CustomTabbarHeight;//减去导航栏和tabbar所占的高度
    
    float unitHeight = funcHeight/5.0;//
    int margin=5;
    
//    CGRect rectVideo = CGRectMake(margin, starty+margin, screenBounds.size.width/2-margin*1.5, unitHeight*3-margin*2);
    CGRect rectVideo = CGRectMake(margin, starty+margin*3, screenBounds.size.width/2-margin*1.5, screenBounds.size.width/2-margin*1.5);

    CGRect rectAlbum = CGRectMake(screenBounds.size.width/2+margin*0.5, starty+margin*3, screenBounds.size.width/2-margin*1.5, screenBounds.size.width/2-margin*1.5);
    
    CGRect rectRecord = CGRectMake(margin, starty+unitHeight*3.5, screenBounds.size.width/3-margin*1.5, unitHeight*2-margin*2);
    CGRect rectMaterial = CGRectMake(margin*2+rectRecord.size.width, starty+unitHeight*3.5, screenBounds.size.width/3-margin*1.5, unitHeight*2-margin*2);
    CGRect rectStudio = CGRectMake(screenBounds.size.width*2/3, starty+unitHeight*3.5, screenBounds.size.width/3-margin*1.5, unitHeight*2-margin*2);
    
    UIView * viewVideo=[self createViewWithFrame:rectVideo imageName:@"edit.png" labelText:NSLocalizedString(@"Advanced Edit", nil) sectionColor:[UIColor clearColor] sectionSelectColor:[UIColor lightGrayColor] tag:0];
    UIView * viewAlbum=[self createViewWithFrame:rectAlbum imageName:@"album.png" labelText:NSLocalizedString(@"Photo Video", nil) sectionColor:[UIColor clearColor] sectionSelectColor:[UIColor colorWithHexString:home_section_select_color_1] tag:1];
    UIView * viewRecord=[self createViewWithFrame:rectRecord imageName:@"record.png" labelText:NSLocalizedString(@"The Video", nil) sectionColor:[UIColor clearColor] sectionSelectColor:[UIColor colorWithHexString:home_section_select_color_2] tag:2];
    UIView * viewMaterial=[self createViewWithFrame:rectMaterial imageName:@"home_material.png" labelText:@"素材商店" sectionColor:[UIColor clearColor] sectionSelectColor:[UIColor colorWithHexString:home_section_select_color_2] tag:3];

    UIView * viewStudio=[self createViewWithFrame:rectStudio imageName:@"home_studio.png" labelText:NSLocalizedString(@"My Studio", nil) sectionColor:[UIColor clearColor] sectionSelectColor:[UIColor colorWithHexString:home_section_select_color_3] tag:4];
    
    [self.view addSubview:viewVideo];
    [self.view addSubview:viewAlbum];
    [self.view addSubview:viewRecord];
    [self.view addSubview:viewMaterial];
    [self.view addSubview:viewStudio];
    
}

/** 创建首页的块视图 */
-(UIView *) createViewWithFrame:(CGRect)sectionRect imageName:(NSString *)imageName labelText:(NSString *)text sectionColor:(UIColor *)sectionColor
                           sectionSelectColor:(UIColor *)sectionSelectColor tag:(NSUInteger)tag
{
    int sectionOffset = 14;
    TouchableView *sectionView = [[TouchableView alloc] initWithFrame:sectionRect];
    sectionView.tag=tag;
    sectionView.backgroundColor = sectionColor;
    sectionView.normalBackgroundColor = sectionColor;
    sectionView.selectBackgroundColor = sectionSelectColor;
    sectionView.userInteractionEnabled = YES;
    sectionView.layer.cornerRadius = 2;
    sectionView.layer.masksToBounds = YES;
    UITapGestureRecognizer *gesture = [[UITapGestureRecognizer alloc] initWithTarget:self action:@selector(handleTap:)];
    [sectionView addGestureRecognizer:gesture];
    
    UIImage * image = [UIImage imageNamed:imageName];
    UIImageView *sectionImageView = [[UIImageView alloc] initWithImage:image];
    
    sectionImageView.frame = CGRectMake(0, 0, sectionView.frame.size.width*2/3, sectionView.frame.size.height*2/3);
    sectionImageView.center = CGPointMake(sectionView.frame.size.width/2, sectionView.frame.size.height/2-sectionOffset);
    
    UILabel *label = [[UILabel alloc] initWithFrame:CGRectMake(0, 0, sectionView.frame.size.width, 30)];
    [label setFont:[UIFont systemFontOfSize:15]];
    label.textAlignment = NSTextAlignmentCenter;
    
    CGPoint point = sectionImageView.center;
    point.y += (sectionImageView.frame.size.height/2 + 20);
    label.center = point;
    
    label.text = text;
    label.backgroundColor = [UIColor clearColor];
    label.textColor = [UIColor blackColor];
    
    [sectionView addSubview:label];
    [sectionView addSubview:sectionImageView];
    
    return sectionView;
}

#pragma mark SDCycleScrollViewDelegate
- (void)cycleScrollView:(SDCycleScrollView *)cycleScrollView didSelectItemAtIndex:(NSInteger)index
{
    AdObject *obj = [adlist objectAtIndex:index];
    [[UIApplication sharedApplication] openURL:[NSURL URLWithString:obj.advertUrl]];
}

-(void)viewWillAppear:(BOOL)animated
{
    [super viewWillAppear:animated];
    //load ad
    if(adlist.count == 0){
        [self requestAdInfo];

    }
}

-(void)viewDidAppear:(BOOL)animated
{
    [super viewDidAppear:animated];
    if ([self.mainDelegate respondsToSelector:@selector(controllerDidAppear:)]) {
        [self.mainDelegate controllerDidAppear:self];
    }
    
}

- (void)viewWillDisappear:(BOOL)animated
{
    [super viewWillDisappear:animated];
    if ([self.mainDelegate respondsToSelector:@selector(controllerDidDisappear:)]) {
        [self.mainDelegate controllerDidDisappear:self];
    }
}

-(void)viewDidDisappear:(BOOL)animated
{
    [super viewDidDisappear:animated];
}

- (BOOL)shouldAutorotate
{
    return NO;
}

- (UIInterfaceOrientation)preferredInterfaceOrientationForPresentation
{
    return UIInterfaceOrientationPortrait;
}

#pragma mark - TapGesture
- (void)handleTap:(UITapGestureRecognizer*)gesture
{
    switch (gesture.view.tag) {
        case 0:
        {
            [MobClick endEvent: CLICK_EDITOR_SCREEN_EXPORT];
            //[AnimationsUtil durationWithSuckEffect:1.0 withSubtype:kCATransitionFromLeft completion:^(BOOL finished){
            AlbumsViewController * control = [[AlbumsViewController alloc] init];
            control.albumsType = @"allAlbums";
                control.filterType=FilterTypeNone;
                UINavigationController *naviControl=[[UINavigationController alloc] initWithRootViewController:control];
                [self presentViewController:naviControl animated:YES completion:nil];
            //}];
            
        }
            break;
        case 1:
        {
            AlbumsViewController * control = [[AlbumsViewController alloc] init];
            control.filterType=FilterTypePhoto;
            control.albumsType = @"photoAlbums";
            UINavigationController *naviControl=[[UINavigationController alloc] initWithRootViewController:control];
            [self presentViewController:naviControl animated:YES completion:nil];
        }
            break;
        case 2:
        {
            [MobClick endEvent: CLICK_MAINMENU_RECORD];
            if([UIImagePickerController isSourceTypeAvailable:UIImagePickerControllerSourceTypeCamera]){
                UIImagePickerController *picker = [[UIImagePickerController alloc] init];
                picker.sourceType = UIImagePickerControllerSourceTypeCamera;
                picker.delegate = self;
                picker.mediaTypes = @[@"public.movie"];
                picker.allowsEditing = YES;
                picker.cameraCaptureMode = UIImagePickerControllerCameraCaptureModeVideo;
                [self presentViewController:picker animated:YES completion:nil];
            }else{
                UIAlertView *alertView = [[UIAlertView alloc] initWithTitle:nil message:NSLocalizedString(@"Camera not available", nil) delegate:nil cancelButtonTitle:NSLocalizedString(@"OK", nil) otherButtonTitles:nil, nil];
                [alertView show];
            }
        }
            break;
        case 3:
        {
            [MobClick endEvent: CLICK_MAINMENU_MY_WORKS];
            MaterialStoreViewController *materViewController = [[MaterialStoreViewController alloc] init];
            UINavigationController *nav = [[RotateNavigationController alloc] initWithRootViewController:materViewController];
            nav.modalPresentationStyle = UIModalPresentationFullScreen;
            [self presentViewController:nav animated:YES completion:nil];
        }
            break;
        case 4:
        {
            [MobClick endEvent: CLICK_MAINMENU_MY_WORKS];
            MyStudioViewController *studioViewController = [[MyStudioViewController alloc] init];
            UINavigationController *nav = [[RotateNavigationController alloc] initWithRootViewController:studioViewController];
            nav.modalPresentationStyle = UIModalPresentationFullScreen;
            [self presentViewController:nav animated:YES completion:nil];
        }
            break;
            
        default:
            break;
    }
}

- (void) requestAdInfo
{
    adlist = [[NSMutableArray alloc] init];
    __weak HomeViewController * weakSelf = self;
    dispatch_async(dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0), ^{
        NSString *lan = [Util preferredLanguage];
        lan = [Util currentLanguageIszhCN] ? @"zh-CN" : lan;
        NSString * base_url=[BaseService prefixUrl:ServiceTypeSticker];
        NSString *urlStr=[NSString stringWithFormat:@"%@/videoshow/api/v2/config?type=homeTopAdvert&page=1&item=5&osType=%d&lang=%@",base_url,2,lan];
        NSLog(@"url===%@",urlStr);
        NSString * result=[BaseService callHttpSync:urlStr];
        NSDictionary * dict=nil;
        if(result){
            dict = [result objectFromJSONString];
            [Prefs cacheResult:dict withName:AD_FILE];
        }else{
            dict=[Prefs getCacheResult:AD_FILE];
        }
        
        if(dict){
            NSNumber *ret = (NSNumber*)dict[@"ret"];
            if (ret.intValue == 1) {
                NSArray *templist = dict[@"advertlist"];
                NSMutableArray *list = [AdObject parseData:templist];
                [weakSelf.adlist removeAllObjects];
                [adlist addObjectsFromArray: list];
            }
        }
        
        dispatch_async(dispatch_get_main_queue(), ^{
            if(weakSelf.adlist.count > 0){
                NSMutableArray * urls=[NSMutableArray array];
                for (int i=0; i<adlist.count; i++) {
                    AdObject * obj = adlist[i];
                    //NSURL * url=[NSURL URLWithString:obj.picUrl];
                    [urls addObject:obj.picUrl];
                }
                weakSelf.mAdView.imageURLStringsGroup = urls;
                //weakSelf.imageURLs = urls;
                //[weakSelf.mAdView reloadData];
            }
        });
    });
    
}

#pragma mark - UIImagePickerControllerDelegate
- (void)imagePickerController:(UIImagePickerController *)picker didFinishPickingMediaWithInfo:(NSDictionary *)info
{
    NSString *mediaType = [info objectForKey:UIImagePickerControllerMediaType];
    if ([mediaType isEqualToString:@"public.movie"]) {
        NSURL *mediaUrl = [info objectForKey:UIImagePickerControllerMediaURL];
        if(UIVideoAtPathIsCompatibleWithSavedPhotosAlbum(mediaUrl.path)){
            ALAssetsLibrary *library = [Util defaultAssetsLibrary];
            __weak HomeViewController *weakRef = self;
            [library writeVideoAtPathToSavedPhotosAlbum:mediaUrl completionBlock:^(NSURL *assetURL, NSError *error){
                if(!error){
                    savedVideoPath = [assetURL absoluteString];
                    [weakRef performSelector:@selector(handleVideo) withObject:weakRef afterDelay:1.0];
                }else{
                    dispatch_async(dispatch_get_main_queue(), ^{
                        UIAlertView *alert = [[UIAlertView alloc] initWithTitle:NSLocalizedString(@"Save Video Failed", nil) message:nil delegate:nil cancelButtonTitle:NSLocalizedString(@"OK", nil) otherButtonTitles:nil, nil];
                        [alert show];
                    });
                }
            }];
        }
        
        [self dismissViewControllerAnimated:YES completion:nil];
    }
}

- (void)imagePickerControllerDidCancel:(UIImagePickerController *)picker
{
    [self dismissViewControllerAnimated:YES completion:nil];
}


/** 点击摄像后返回 */
- (void)handleVideo
{
    [MBProgressHUD showHUDAddedTo:self.view animated:YES].labelText=NSLocalizedString(@"Processing", nil);
    __block qxTimeline *timeline = [qxTimeline timelineWithVideoPath:savedVideoPath];
    if(timeline){
        PlayerViewController *control = [PlayerViewController initFromStoryboard:[PlayerViewController class]];
        control.timeline = timeline;
        UINavigationController * naviControl = [[UINavigationController alloc] initWithRootViewController:control];
        [self presentViewController:naviControl animated:YES completion:nil];
        [MBProgressHUD hideAllHUDsForView:self.view animated:YES];
    }
}

@end
