//
//  SoundtrackViewController.m
//  VideoShow
//
//  Created by Mac on 16/1/11.
//  Copyright © 2016年 energy. All rights reserved.
//

#import "SoundtrackViewController.h"
#import "RotateNavigationController.h"
#import "SoundTrackInf.h"
#import "BaseService.h"
#import "UIColor+Util.h"
#import "UIImage+Util.h"
#import "UIImageView+WebCache.h"
#import "UITabBar+Badge.h"
#import "MJRefresh.h"
#import "Util.h"
#import "AppMacros.h"
#import "JSONKit.h"
#import "SouceTrackCell.h"
#import "Toast+UIView.h"
#import "MaterialDownloadViewController.h"
#import "VoiceController.h"
static NSString *cellIdentifier = @"SouceTrackCell";

//static  int verCode = 0;

@interface SoundtrackViewController (){
    UIView *netErrorView;
}

@property (nonatomic,assign) int pageIndex;
@property (nonatomic,strong) NSMutableArray *mMaterials;//提供下载的素材列表
@end

@implementation SoundtrackViewController
@synthesize mMaterials,pageIndex,disableBack;

- (id)initWithStyle:(UITableViewStyle)style
{
    if(self = [super initWithStyle:style]){
        
    }
    return self;
}
- (void)viewDidLoad {
    [super viewDidLoad];
    [self.tabBarController.tabBar removeBadgeOnItemIndex:0];
    self.view.backgroundColor = [UIColor colorWithHexString:tableSectionColor];
    mMaterials=[NSMutableArray array];
    [self.navigationController.navigationBar initWithViewController:self title:@"配乐"];
    
    if (disableBack==NO) {//允许显示返回
        [self.navigationController.navigationBar initWithViewController:self leftImageName:@"ic_back_arrow.png" action:@selector(backAction:)];
    }
    [self.navigationController.navigationBar initWithViewController:self rightImageName:@"bt_setting_normal.png" action:@selector(settingAction:)];
    
    //
    UINib *cellNib = [UINib nibWithNibName:cellIdentifier bundle:nil];
    [self.tableView registerNib:cellNib forCellReuseIdentifier:cellIdentifier];
    self.tableView.separatorColor = [UIColor colorWithHexString:@"#c8c7cc"];
    
    //request server
    [self setupRefresh];

}

- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}
/**
 *  集成刷新控件
 */
- (void)setupRefresh
{
    __weak SoundtrackViewController * weakSelf = self;
    [self.tableView addHeaderWithCallback:^{
        weakSelf.pageIndex = 1;
        dispatch_async(dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0), ^{
            NSArray * results = [weakSelf requestPostWithPageIndex:1];
            dispatch_after(dispatch_time(DISPATCH_TIME_NOW, (int64_t)(0.0 * NSEC_PER_SEC)), dispatch_get_main_queue(), ^{
                if (results!=nil && results.count>0) {
                    [weakSelf.mMaterials removeAllObjects];
                    [weakSelf.mMaterials addObjectsFromArray:results];
                    [weakSelf.tableView reloadData];
//                    [StickerDownloader sharedInstance].originalDataList=weakSelf.mMaterials;
                }
                
                [weakSelf.tableView headerEndRefreshing];
            });
            
        });
        
    }];
    [self.tableView addFooterWithCallback:^{
        dispatch_async(dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0), ^{
            NSArray * results = [weakSelf requestPostWithPageIndex:++weakSelf.pageIndex];
            dispatch_after(dispatch_time(DISPATCH_TIME_NOW, (int64_t)(0.0 * NSEC_PER_SEC)), dispatch_get_main_queue(), ^{
                if (results!=nil && results.count>0) {
                    [weakSelf.mMaterials addObjectsFromArray:results];
                    [weakSelf.tableView reloadData];
              //      [StickerDownloader sharedInstance].originalDataList=weakSelf.mMaterials;
                }
                
                [weakSelf.tableView footerEndRefreshing];
            });
        });
        
    }];
    
    self.tableView.headerPullToRefreshText = NSLocalizedString(@"header_pull_refresh", nil);
    self.tableView.headerReleaseToRefreshText = NSLocalizedString(@"header_release_refresh", nil);
    self.tableView.headerRefreshingText = NSLocalizedString(@"load_refreshing", nil);
    
    self.tableView.footerPullToRefreshText = NSLocalizedString(@"footer_pull_refresh", nil);
    self.tableView.footerReleaseToRefreshText = NSLocalizedString(@"footer_release_refresh", nil);
    self.tableView.footerRefreshingText = NSLocalizedString(@"load_refreshing", nil);
    [self.tableView headerBeginRefreshing];
}
- (void)showNetErrorView
{
    if  (!netErrorView){
        netErrorView = [[UIView alloc] initWithFrame:CGRectMake(0, 0, self.view.frame.size.width, self.view.frame.size.height)];
        netErrorView.backgroundColor = [UIColor whiteColor];
        UIImageView *imageView = [[UIImageView alloc] initWithFrame:CGRectMake((netErrorView.frame.size.width - 80)/2, 120, 80, 80)];
        imageView.image = [UIImage imageResource:@"ic_network_wifi.png"];
        [netErrorView addSubview:imageView];
        //
        UILabel *label = [[UILabel alloc] initWithFrame:CGRectMake((netErrorView.frame.size.width - 200)/2, imageView.frame.origin.y + imageView.frame.size.height + 5, 200, 30)];
        label.textColor = [UIColor grayColor];
        label.textAlignment = NSTextAlignmentCenter;
        label.text = NSLocalizedString(@"Request Failed And Network Error", nil);
        [label sizeToFit];
        [netErrorView addSubview:label];
        UIButton *button = [[UIButton alloc] initWithFrame:CGRectMake((netErrorView.frame.size.width - 120)/2, label.frame.origin.y + label.frame.size.height + 20, 120, 45)];
        button.backgroundColor = [UIColor grayColor];
        [button setTitle:NSLocalizedString(@"Reload", nil) forState:UIControlStateNormal];
        [button addTarget:self action:@selector(reloadAction:) forControlEvents:UIControlEventTouchUpInside];
        [button setTitleColor:[UIColor whiteColor] forState:UIControlStateNormal];
        [netErrorView addSubview:button];
        [self.view addSubview:netErrorView];
    }
    netErrorView.hidden = NO;
    [self.view bringSubviewToFront:netErrorView];
}

- (BOOL)shouldAutorotate
{
    return NO;
}

- (UIInterfaceOrientation)preferredInterfaceOrientationForPresentation
{
    return UIInterfaceOrientationPortrait;
}

- (UIInterfaceOrientationMask)supportedInterfaceOrientations
{
    return UIInterfaceOrientationMaskPortrait;
}
- (void)hideNetErrorView
{
    netErrorView.hidden = YES;
}

- (void)viewWillAppear:(BOOL)animated
{
    [super viewWillAppear:animated];
//    [StickerDownloader sharedInstance].delegate = self;
    //query local data
//    predownloadList = [DownloadingSticker queryAll];
    [self.tableView reloadSections:[NSIndexSet indexSetWithIndex:0] withRowAnimation:UITableViewRowAnimationFade];
    
}

-(void)viewDidAppear:(BOOL)animated
{
    [super viewDidAppear:animated];
    if ([self.mainDelegate respondsToSelector:@selector(controllerDidAppear:)]) {
        [self.mainDelegate controllerDidAppear:self];
    }
    
}

- (void)viewWillDisappear:(BOOL)animated
{
    [super viewWillDisappear:animated];
    if ([self.mainDelegate respondsToSelector:@selector(controllerDidDisappear:)]) {
        [self.mainDelegate controllerDidDisappear:self];
    }
}

- (void)reloadAction:(id)sender
{
    [self hideNetErrorView];
    [self.tableView headerBeginRefreshing];
}


-(void) backAction:(id)sender
{
//    [self.navigationController popViewControllerAnimated:YES];
    [self dismissViewControllerAnimated:YES completion:nil];
}

- (void)settingAction:(id)sender
{
   VoiceController  *controller = [[VoiceController alloc] initWithStyle:UITableViewStylePlain];
   
    controller.materialType = MaterialTypeSoundtrack;
 
    RotateNavigationController *nav = [[RotateNavigationController alloc] initWithRootViewController:controller];
    
    [self presentViewController:nav animated:YES completion:nil];
    
}

/*
#pragma mark - Navigation

// In a storyboard-based application, you will often want to do a little preparation before navigation
- (void)prepareForSegue:(UIStoryboardSegue *)segue sender:(id)sender {
    // Get the new view controller using [segue destinationViewController].
    // Pass the selected object to the new view controller.
}
*/
#pragma mark - UITableViewDataSource
- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    return mMaterials.count;
}

- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView
{
    
    return 1;
}

-(CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath
{
    return 70.0;
}

- (void)tableView:(UITableView *)tableView willDisplayCell:(UITableViewCell *)cell forRowAtIndexPath:(NSIndexPath *)indexPath
{
    //    if ([cell respondsToSelector:@selector(setSeparatorInset:)]) {
    //        [cell setSeparatorInset:UIEdgeInsetsZero];
    //    }
    //    if ([cell respondsToSelector:@selector(setPreservesSuperviewLayoutMargins:)]) {
    //        [cell setPreservesSuperviewLayoutMargins:NO];
    //    }
    //    if ([cell respondsToSelector:@selector(setLayoutMargins:)]) {
    //        [cell setLayoutMargins:UIEdgeInsetsZero];
    //    }
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    SoundTrackInf * inf = (SoundTrackInf*)mMaterials[indexPath.row];
   
    
    SouceTrackCell *cell = [tableView dequeueReusableCellWithIdentifier:cellIdentifier];
    
    [cell.souceTrackIcon setImageWithURL:[NSURL URLWithString:[NSString stringWithFormat:@"%@", inf.icon_url]] placeholderImage:[UIImage imageResource:@"default_gray.png"]];
    
    if(inf.ver_code!=1)
    {
        
        cell.statusIcon.hidden=NO;
        
    }
    else
    {
        cell.statusIcon.hidden=YES;
    }
    
    cell.materialID = inf.id;
    
    cell.soundTrackInf=inf;
    
    cell.titleLabel.text = inf.soundTrack_name;
    
    cell.detailLabel.text =inf.soundTrack_paper;
    
    return cell;
}

#pragma mark - UITableViewDelegate
- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{
    SoundTrackInf * inf = mMaterials[indexPath.row];

    inf.ver_code=1;

    MaterialDownloadViewController * materiaList = [[MaterialDownloadViewController alloc]init];
    
    materiaList.typeId = [[NSString alloc]initWithFormat:@"%i",inf.id];
    materiaList.titleText = inf.soundTrack_name;
    materiaList.materialType = MaterialTypeSoundtrack;
    [self.navigationController pushViewController:materiaList animated:YES];
    
}

-(NSMutableArray *) requestPostWithPageIndex:(int)index
{
    NSString *lan = [Util currentLanguageIszhCN] ? @"zh-CN" : @"en-US";

    int count=10;
    
    if (isPad)
    {
        count=20;
    }
    NSString *url = @"http://tsso.videoshowapp.com:88/zone/1.0.1/musicClient/getMusicTypeList.htm?osType=2";
    NSMutableDictionary * dic = [[NSMutableDictionary alloc]init];
    [dic setValue:0 forKey:@"startId"];
    [dic setValue:lan forKey:@"lang"];
    [dic setValue:@"1.9.5" forKey:@"versionName"];
   
    NSString *requestId = [NSString stringWithFormat:@"%i%u",(int)[[NSDate date]timeIntervalSince1970] *1000,arc4random() % 1000];
    ;
    [dic setValue: requestId forKey:@"requestId"];
    NSString * result = [BaseService doPostRequestcUrl:url dict:dic];
    if (result==nil || [result isEqualToString:@""]) {
        return nil;
    }
    
    NSDictionary *dict = [result objectFromJSONString];
    if(dict && [dict[@"retMsg"] isEqualToString:@"success"])
    {
      
        NSArray * jsonArr = dict[@"musicTypelist"];
        return [SoundTrackInf initFromArr:jsonArr];
    }
    else
    {
        return nil;
    }
    
    return nil;
}
@end
