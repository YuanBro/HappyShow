//
//  StickerView.m
//  VideoShow
//
//  Created by lance on 15/11/14.
//  Copyright © 2015年 energy. All rights reserved.
//

#import "StickerView.h"
#import "qxMediaObject+Util.h"
#import "qxStickerObject.h"
#import "qxGifObject+Util.h"
#import "UIImage+Util.h"
#import "Util.h"

@interface StickerView()

////////////////////////////////////////////
// overlayCustomObj 都是qxStickerObject类型 //
/////////////////////////////////////////////

@property (nonatomic, strong) NSMutableArray *mediaObjects;

@property (nonatomic, strong) dispatch_queue_t drawQueue;//时间轴滚动时操作的队列

@end

@implementation StickerView

@synthesize  mediaObjects = _mediaObjects;

- (instancetype)initWithFrame:(CGRect)frame {
    self = [super initWithFrame:frame];
    if (self) {
        self.userInteractionEnabled = YES;
        // 创建一个主线程的队列
        self.drawQueue = dispatch_queue_create("serial queue", DISPATCH_QUEUE_SERIAL);
        
        self.mediaObjects = [NSMutableArray array];
        
    }
    return self;
}

// 更新字幕的相关属性
// 更新overlay的相关属性
- (void) updateMediaObject:(qxMediaObject *)mediaObject hidden:(BOOL)isHidden {
    
    qxStickerObject *stickerObject = mediaObject.overlayCustomObj;
    
    CGRect displayRect = mediaObject.textDisplayRect;
    CGFloat originx = displayRect.origin.x * self.frame.size.width;
    CGFloat originy = displayRect.origin.y * self.frame.size.height;
    
    CGFloat width = displayRect.size.width * self.frame.size.width;
    CGFloat height = displayRect.size.height * self.frame.size.height;
    
    CGRect frame = CGRectMake(originx, originy, width, height);
    
    UIImageView *imageView = stickerObject.overlayCustomObj;
    
    imageView.frame = frame;
    
    UIImage * simg = nil;
    if(mediaObject.eType==eMT_OverlayDynamic){
        //NSString *path = mediaObject.subOverlayArray[0];
        //simg = [UIImage imageWithContentsOfFile:path];
//        qxGifObject * obj = stickerObject.gifObj;
//        simg = [UIImage imageWithContentsOfFile:[obj.gifFilePath path]];
    }else{
        simg = [UIImage imageWithContentsOfFile:mediaObject.strFilePath];
    }
    
    if ([[NSFileManager defaultManager] fileExistsAtPath:mediaObject.strFilePath]) {
        //NSLog(@"");
    }else{
        NSLog(@"update sticker 图片路径不存在");
    }
    
    imageView.image = simg;
    
    imageView.hidden = isHidden;
    
}

// 隐藏某个字幕 YES为隐藏 NO为显示
- (void) hideMediaObject:(qxMediaObject *)mediaObject flag:(BOOL)flag {
    if (mediaObject == nil) {
        return;
    }
    
    qxStickerObject *stickerObject = mediaObject.overlayCustomObj;
    UIImageView *imageView = stickerObject.overlayCustomObj;
    
    if (imageView) {
        imageView.hidden = flag;
    }
}

// 滚动后判断哪些可以绘制---如果是gif图片会比较复杂一些
- (void) scrollToSecond:(CGFloat)second {
    
    __weak typeof (self) weakSelf = self;
    dispatch_async(self.drawQueue, ^{
        
        // 迭代集合来隐藏和现实对应的字幕
        for (qxMediaObject *mediaObj in weakSelf.mediaObjects) {
            
            qxStickerObject *stickerObject = mediaObj.overlayCustomObj;
            float start = CMTimeGetSeconds(mediaObj.startTimeOfTrack);
            float duration = CMTimeGetSeconds(mediaObj.actualTimeRange.duration);
            
            if (second >= start && second <= start + duration) {
                
                UIImageView *imageView = stickerObject.overlayCustomObj;
                
                if (imageView && imageView.hidden == YES) {
                    
                    dispatch_sync(dispatch_get_main_queue(), ^{
                        imageView.hidden = NO;
                    });
                }
            } else {
                UIImageView *imageView = stickerObject.overlayCustomObj;
                
                if (imageView && imageView.hidden == NO) {
                    
                    dispatch_sync(dispatch_get_main_queue(), ^{
                        imageView.hidden = YES;
                    });
                }
            }
        }
        
    });
    
}

// 添加字幕
- (void) addMediaObject:(qxMediaObject *)mediaObject {
    
    if (mediaObject == nil) {
        return;
    }
    
    UIImageView *imageView = [self imageWithMediaObject:mediaObject hidden:NO];
    qxStickerObject *stickerObject = mediaObject.overlayCustomObj;
    
    stickerObject.overlayCustomObj = imageView;
    imageView.hidden = YES;
    
    [self addSubview:imageView];
    
    [self.mediaObjects addObject:mediaObject];
}

// 删除字幕
- (void) deleteMediaObject:(qxMediaObject *)mediaObject {
    if (mediaObject == nil) {
        return;
    }
    
    qxStickerObject *stickerObject = mediaObject.overlayCustomObj;
    UIImageView *imageView = stickerObject.overlayCustomObj;
    [imageView removeFromSuperview];
    imageView = nil;
    
    [self.mediaObjects removeObject:mediaObject];
}

// 清理所有字幕的label或者image
- (void) clearAll {
    for (qxMediaObject *mediaObject in self.mediaObjects) {
        
        qxStickerObject *stickerObject = mediaObject.overlayCustomObj;
        stickerObject.overlayCustomObj = nil;
        
    }
    
    [self.mediaObjects removeAllObjects];
}

// 创建图片组件
- (UIImageView *)imageWithMediaObject:(qxMediaObject *)mediaObject hidden:(BOOL)isHidden {
    
    //qxStickerObject *stickerObject = mediaObject.overlayCustomObj;
    
    CGRect displayRect = mediaObject.textDisplayRect;
    CGFloat originx = displayRect.origin.x * self.frame.size.width;
    CGFloat originy = displayRect.origin.y * self.frame.size.height;
    
    CGFloat width = displayRect.size.width * self.frame.size.width;
    CGFloat height = displayRect.size.height * self.frame.size.height;
    
    CGRect frame = CGRectMake(originx, originy, width, height);
    
    UIImageView *imageView = [[UIImageView alloc] initWithFrame:frame];
    imageView.userInteractionEnabled = YES;
    imageView.hidden = isHidden;
    
    UIImage * simg = nil;
    if(mediaObject.eType==eMT_OverlayDynamic){
//        NSString *path = mediaObject.subOverlayArray[0];
//        simg = [UIImage imageWithContentsOfFile:path];
//        qxStickerObject *stickerObject = mediaObject.overlayCustomObj;
//        qxGifObject * obj = stickerObject.gifObj;
//        simg = [UIImage imageWithContentsOfFile:[obj.gifFilePath path]];
    }else{
        simg = [UIImage imageWithContentsOfFile:mediaObject.strFilePath];
        
        if ([[NSFileManager defaultManager] fileExistsAtPath:mediaObject.strFilePath]) {
            //NSLog(@"");
        }else{
            NSLog(@"init sticker 图片路径不存在");
        }
    }
    
    imageView.image = simg;

    UITapGestureRecognizer *tapGesture = [[UITapGestureRecognizer alloc] initWithTarget:self action:@selector(handleStickerTap:)];
    [imageView addGestureRecognizer:tapGesture];
    
    return imageView;
}

// 根据组件返回对应的overlay
- (qxMediaObject *)mediaObjectWithImageView:(UIImageView *)imageView {
    for (qxMediaObject *mediaObject in self.mediaObjects) {
        
        qxStickerObject *textObject = mediaObject.overlayCustomObj;
        
        if(imageView == textObject.overlayCustomObj) {
            return mediaObject;
        }
    }
    
    return nil;
}

- (void)handleStickerTap:(UIGestureRecognizer *)recognizer {
    UIView * view = recognizer.view;
    if ([view isKindOfClass:[UIImageView class]]) {
        UIImageView *imageView = (UIImageView *)view;
        qxMediaObject *tapMediaObject = [self mediaObjectWithImageView:imageView];
        
        if(tapMediaObject == nil){
            return;
        }
        
        [self hideAllStickerExcludeMediaObject:tapMediaObject];
        
        if ([self.delegate respondsToSelector:@selector(stickerView:withMediaObject:)]) {
            [self.delegate stickerView:self withMediaObject:tapMediaObject];
        }
    }
    
}

- (void)hideAllStickerExcludeMediaObject:(qxMediaObject *)mediaObject {
    for (qxMediaObject *mediaObj in self.mediaObjects) {
        
        qxStickerObject *stickerObj = mediaObj.overlayCustomObj;
        UIImageView *imageView = stickerObj.overlayCustomObj;
        
        if (mediaObj == mediaObject) {
            imageView.hidden = NO;
        }else{
            imageView.hidden = YES;
        }
        
    }
}

- (void)setMediaObjects:(NSMutableArray *)mediaObjects {
    if(mediaObjects == nil) {
        return;
    }
    
    _mediaObjects = mediaObjects;
    
    for (qxMediaObject *mediaObject in mediaObjects) {
        
        UIImageView *imageView = [self imageWithMediaObject:mediaObject hidden:YES];
        qxStickerObject *stickerObject = mediaObject.overlayCustomObj;
        
        stickerObject.overlayCustomObj = imageView;
        
        [self addSubview:imageView];
    }
}

- (NSMutableArray *)mediaObjects {
    return _mediaObjects;
}

- (void)touchesBegan:(NSSet<UITouch *> *)touches withEvent:(UIEvent *)event {
    
}

@end
