//
//  StoryboardView.m
//  VideoShow
//
//  Created by lance on 15/4/14.
//  Copyright (c) 2015年 energy. All rights reserved.
//

#import "StoryboardViewController.h"

#import "LXReorderableCollectionViewFlowLayout.h"
#import "StoryboardCell.h"
#import "UIImage+Util.h"
#import "UIColor+Util.h"

#define TopViewHeight 40
#define LABEL_SIZE_HEIGHT 14
#define X_OFFSET 5
#define Y_OFFSET 5
#define layout_space 3

#define cellIdentifier @"StoryboardCell"

@interface StoryboardViewController()<UICollectionViewDelegate, UICollectionViewDataSource,LXReorderableCollectionViewDataSource, LXReorderableCollectionViewDelegateFlowLayout,StoryboardCellDelegate>

@property (nonatomic,strong) UIView * bgView;
@property (nonatomic,strong) UIView * topView;
@property (nonatomic,strong) UIButton * btExpand;//点击扩展按钮
@property (nonatomic,strong) UIButton * btCreative;
@property (nonatomic,retain) UILabel *totalCountLabel;
@property (nonatomic,strong) UICollectionView * mMediaCollect;//显示片段结合视图
@property (nonatomic) NSInteger  deleteIndex;

@property (strong, nonatomic) NSMutableArray *hasBorders; //是否有边框的数组

@property (assign, nonatomic) BOOL isFirstRefresh;
@property (strong, nonatomic) NSIndexPath *hasBorderIndexPath;
@end

@implementation StoryboardViewController

@synthesize delegate;

@synthesize mMedias;
@synthesize bgView;
@synthesize topView;
@synthesize btExpand;
@synthesize btCreative;
@synthesize totalCountLabel;
@synthesize mMediaCollect;
@synthesize storyType;
@synthesize lastIndexPath;
@synthesize deleteIndex;
- (void)viewDidLoad {
    //[self setup];
}

- (void)dealloc {
    
    [self cleanMemory];
}

- (void)cleanMemory {
    self.mMediaCollect.dataSource = nil;
    self.mMediaCollect.delegate = nil;
    
    [self.mMedias removeAllObjects];
    self.mMedias = nil;
    [self.mMediaCollect removeFromSuperview];
}

/** 关联到父控制器 */
-(void)attachToController:(UIViewController *)rootController superview:(UIView *)superview frame:(CGRect)frame {
    
    self.isFirstRefresh = YES;
    
    [self setup:frame];
    
    [superview addSubview:self.view];
    [rootController addChildViewController:self];
    [self didMoveToParentViewController:rootController];
    
}

/** 取消与父控制器的关联 */
-(void)cancelAttachToController {
    [self.view removeFromSuperview];
    [self removeFromParentViewController];
}

- (void)setup:(CGRect)frame {
    self.view.frame = frame;
    self.view.backgroundColor = [UIColor colorWithHexString:@"#ee222222"];
    self.view.autoresizesSubviews = YES;
    self.view.autoresizingMask=UIViewAutoresizingFlexibleHeight;
//    self.lastIndexPath.row = 0;
    //添加顶部分割线
    UIImageView *topline = [[UIImageView alloc] initWithFrame:CGRectMake(0, 0, frame.size.width, 0)];
    [topline setImage:[UIImage imageResource:@"photo_bar_top.png"]];
    [self.view addSubview:topline];
    
    bgView = [[UIView alloc] initWithFrame:CGRectMake(0, topline.frame.size.height, frame.size.width, frame.size.height - topline.frame.size.height)];
    bgView.backgroundColor = [UIColor clearColor];
    bgView.autoresizesSubviews=YES;
    bgView.autoresizingMask=UIViewAutoresizingFlexibleHeight|UIViewAutoresizingFlexibleBottomMargin;
    
    topView = [[UIView alloc] initWithFrame:CGRectMake(0, 0, frame.size.width, TopViewHeight)];
    topView.backgroundColor = [UIColor clearColor];
    topView.autoresizesSubviews=YES;
    topView.autoresizingMask=UIViewAutoresizingFlexibleHeight|UIViewAutoresizingFlexibleBottomMargin;
    
    [bgView addSubview:topView];
    
    LXReorderableCollectionViewFlowLayout * layout = [[LXReorderableCollectionViewFlowLayout alloc] init];
    float itemWidth = (self.view.frame.size.width-layout_space*5)/4.0;
    layout.itemSize = CGSizeMake(itemWidth, itemWidth);
    layout.sectionInset = UIEdgeInsetsMake(layout_space, layout_space, layout_space, layout_space);
    //layout.sectionInset = UIEdgeInsetsZero;
    layout.minimumInteritemSpacing=layout_space;
    layout.minimumLineSpacing=layout_space;
    
    self.mMediaCollect = [[UICollectionView alloc] initWithFrame:CGRectMake(0, topView.frame.size.height, frame.size.width, frame.size.height-topView.frame.size.height) collectionViewLayout:layout];
    self.mMediaCollect.backgroundColor=[UIColor clearColor];
    [self.mMediaCollect registerClass:[StoryboardCell class] forCellWithReuseIdentifier:cellIdentifier];
    self.mMediaCollect.showsVerticalScrollIndicator=YES;
    self.mMediaCollect.alwaysBounceVertical=YES;
    self.mMediaCollect.delegate=self;
    self.mMediaCollect.dataSource=self;
    self.mMediaCollect.autoresizingMask=UIViewAutoresizingFlexibleHeight;
    self.mMediaCollect.allowsMultipleSelection=NO;
    [bgView addSubview:self.mMediaCollect];
    
    btExpand = [UIButton buttonWithType:UIButtonTypeCustom];
    btExpand.frame=CGRectMake(0,0, 28, 28);
    [btExpand setImage:[UIImage imageResource:@"bt_expand_down.png"] forState:UIControlStateSelected];
    [btExpand setImage:[UIImage imageResource:@"bt_expand_up.png"] forState:UIControlStateNormal];
    btExpand.contentMode=UIViewContentModeCenter;
    [btExpand addTarget:self action:@selector(expandAction:) forControlEvents:UIControlEventTouchUpInside];
    [topView addSubview:btExpand];
    btExpand.center=CGPointMake(topView.center.x, btExpand.center.y);
    
    //        // 添加提示文字
    //        UILabel * hintLabel=[[UILabel alloc] initWithFrame:CGRectZero];
    //        hintLabel.backgroundColor=[UIColor clearColor];
    //        hintLabel.font=[UIFont systemFontOfSize:10];
    //        hintLabel.textColor=[UIColor grayColor];
    //        hintLabel.textAlignment=NSTextAlignmentLeft;
    //        hintLabel.text=NSLocalizedString(@"Touch Move", nil);
    //        [hintLabel sizeToFit];
    //
    //        [bgView addSubview:hintLabel];
    
    //
    self.totalCountLabel = [[UILabel alloc] initWithFrame:CGRectMake(10, Y_OFFSET, (frame.size.width-btExpand.frame.size.width)/2, LABEL_SIZE_HEIGHT)];
    self.totalCountLabel.backgroundColor = [UIColor clearColor];
    self.totalCountLabel.font = [UIFont systemFontOfSize:LABEL_SIZE_HEIGHT];
    self.totalCountLabel.textColor=[UIColor whiteColor];
    self.totalCountLabel.textAlignment = NSTextAlignmentLeft;
    //[self.totalCountLabel sizeToFit];
    
    [topView addSubview:self.totalCountLabel];
    totalCountLabel.center=CGPointMake(totalCountLabel.center.x, topView.center.y);
    
    [self setTotalCountLabel];
    
    if (![@"editClip" isEqualToString:storyType] && self.editType != EditTypeFilter && self.editType != EditTypeTransition) {
        float width = 100;
        float height = 28;
        btCreative = [UIButton buttonWithType:UIButtonTypeCustom];
        btCreative.frame=CGRectMake(frame.size.width - width - 3, 0, width, height);
        btCreative.backgroundColor=[UIColor colorWithHexString:themeColor];
        btCreative.titleLabel.font=[UIFont systemFontOfSize:15];
        btCreative.layer.cornerRadius=5;
        [btCreative setTitle:NSLocalizedString(@"Start Creative", nil) forState:UIControlStateNormal];
        
        btCreative.contentMode=UIViewContentModeCenter;
        [btCreative addTarget:self action:@selector(creativeAction:) forControlEvents:UIControlEventTouchUpInside];
        [topView addSubview:btCreative];
        btCreative.center=CGPointMake(btCreative.center.x, topView.center.y);

    }
    
    
    
    //hintLabel.center=CGPointMake(bgView.frame.size.width/2, self.totalCountLabel.center.y);
    
    [self.view addSubview:bgView];
    
    self.mMedias = [NSMutableArray array];

    self.view.autoresizingMask = UIViewAutoresizingFlexibleBottomMargin|UIViewAutoresizingFlexibleWidth;
}



-(void) creativeAction:(UIButton *)sender
{
    if (self.createAction) {
        [sender sendAction:self.createAction to:self.target forEvent:nil];
    }
}

-(void) expandAction:(UIButton *)sender
{
    __weak StoryboardViewController * weakSelf = self;
    //扩展1/2屏幕高度
    int expandHeight=[UIScreen mainScreen].bounds.size.height/2;
    __block CGRect rect=weakSelf.view.frame;
    [UIView animateWithDuration:0.5 animations:^{
        
        if (weakSelf.btExpand.selected==NO) {//展开
            rect.origin.y-=expandHeight;
            rect.size.height+=expandHeight;
        }else{
            rect.origin.y+=expandHeight;
            //
        }
        weakSelf.view.frame=rect;
    } completion:^(BOOL finished){
        if (finished) {
            if (weakSelf.btExpand.selected==YES) {//收缩
                rect.size.height-=expandHeight;
                weakSelf.view.frame=rect;
            }
            weakSelf.btExpand.selected=!weakSelf.btExpand.selected;
        }
    }];
    
}

- (void)setTotalCountLabel
{
    //Have series
    NSString * patternStr = NSLocalizedString(@"Have series", nil);
    self.totalCountLabel.text = [NSString stringWithFormat:patternStr,(unsigned long)self.mMedias.count];
}

#pragma mark - UICollectionViewDataSource methods

- (NSInteger)collectionView:(UICollectionView *)theCollectionView numberOfItemsInSection:(NSInteger)theSectionIndex {
    return self.mMedias.count;
}
//定义展示的Section的个数
-(NSInteger)numberOfSectionsInCollectionView:(UICollectionView *)collectionView
{
    return 1;
}
- (UICollectionViewCell *)collectionView:(UICollectionView *)collectionView cellForItemAtIndexPath:(NSIndexPath *)indexPath {
    
    
    StoryboardCell * cell = [collectionView dequeueReusableCellWithReuseIdentifier:cellIdentifier forIndexPath:indexPath];
    ALAsset * asset = [self.mMedias objectAtIndex:indexPath.row];
    cell.delegate=self;
    cell.assetImage.image = [UIImage imageWithCGImage:asset.thumbnail];
    if ([@"editClip" isEqualToString:storyType] || self.editType==EditTypeFilter || self.editType == EditTypeTransition) {

        if (indexPath.item == 0 && self.isFirstRefresh) {
            self.isFirstRefresh = NO;
//            cell.selected = YES;
            [delegate editPrepare:0];
        }
        self.lastIndexPath = indexPath;
        [self setCellBorderWithCell:cell hasBorder:[self.hasBorders[indexPath.row] boolValue]];
    }
    if (self.editType == EditTypeFilter || self.editType == EditTypeTransition) {
        cell.btDel.hidden = YES;
    }
    return cell;
}

- (void)collectionView:(UICollectionView *)collectionView didSelectItemAtIndexPath:(NSIndexPath *)indexPath
{
    
    if ([@"editClip" isEqualToString:storyType] || self.editType==EditTypeFilter || self.editType == EditTypeTransition) {
        
//        UICollectionViewCell * cell = [collectionView cellForItemAtIndexPath:indexPath];
//        cell.backgroundColor = [UIColor redColor];
    
        [self setSelectedCellBorder:indexPath];
        [collectionView reloadData];
        [delegate editPrepare:(int)indexPath.row];
    }
}

/**
 * 设置指定下标的边框
 */
- (void)setSelectedCellBorder:(NSIndexPath *)indexPath {
    for (NSInteger i=0; i<self.hasBorders.count; i++) {
        self.hasBorders[i] = [NSNumber numberWithBool:(i==indexPath.row)];
    }
    self.hasBorderIndexPath = indexPath;
}

/**
 * public method
 *
 * 设置指定下标的边框
 * 并刷新
 */
- (void)setBoder:(NSInteger)index {
    [self setSelectedCellBorder:[NSIndexPath indexPathForRow:index inSection:0]];
    [self.mMediaCollect reloadData];
}

//返回这个UICollectionView是否可以被选择
//-(BOOL)collectionView:(UICollectionView *)collectionView shouldSelectItemAtIndexPath:(NSIndexPath *)indexPath
//{

//    self.lastIndexPath = indexPath;
//    UICollectionViewCell * cell = [collectionView cellForItemAtIndexPath:indexPath];
//    if (cell.selected) {
//        return NO;
//    }
//    return YES;
//}

- (void)collectionView:(UICollectionView *)collectionView didDeselectItemAtIndexPath:(NSIndexPath *)indexPath {
    self.lastIndexPath = indexPath;
}

-(void)deleteMedia:(StoryboardCell*)cell
{
    
    
    NSIndexPath * indexPath=[self.mMediaCollect indexPathForCell:cell];
    self.deleteIndex = indexPath.row;
    if ([@"editClip" isEqualToString:storyType] || self.editType==EditTypeFilter || self.editType == EditTypeTransition){
        //[delegate deleteAsset];
        
        [delegate deleteAsset:indexPath.row];
    }else{
        [self deleteObjectMedia];
    }
}
-(void)deleteObjectMedia{
    [self.mMedias removeObjectAtIndex:self.deleteIndex];
    [self.mMediaCollect deleteItemsAtIndexPaths:@[[NSIndexPath indexPathForItem:self.deleteIndex inSection:0]]];
    [self setTotalCountLabel];
    if (delegate!=nil && [delegate respondsToSelector:@selector(didDataChange:)]) {
        [delegate didDataChange:self];
    }

}
-(void) clearMedias {
    [self.mMedias removeAllObjects];
    [self.mMediaCollect reloadSections:[NSIndexSet indexSetWithIndex:0]];
    [self setTotalCountLabel];
    if (delegate!=nil && [delegate respondsToSelector:@selector(didDataChange:)]) {
        [delegate didDataChange:self];
    }
}

#pragma mark - LXReorderableCollectionViewDataSource methods
/** 移动之后的处理---拖动期间的任何一次交换位置 */
- (void)collectionView:(UICollectionView *)collectionView itemAtIndexPath:(NSIndexPath *)fromIndexPath didMoveToIndexPath:(NSIndexPath *)toIndexPath {
    
}

/** 是否可以移动到某个位置 如果需要定制化自己实现---默认为true */
- (BOOL)collectionView:(UICollectionView *)collectionView canMoveItemAtIndexPath:(NSIndexPath *)indexPath {

    return YES;
}

/** 判断是否可以执行移动 自己实现 */
- (BOOL)collectionView:(UICollectionView *)collectionView itemAtIndexPath:(NSIndexPath *)fromIndexPath canMoveToIndexPath:(NSIndexPath *)toIndexPath {
#if 1
    if (self.editType == EditTypeTransition) { //暂时先不让它可以移动
        return NO;
    }
#endif
    return YES;
}

#pragma mark - LXReorderableCollectionViewDelegateFlowLayout methods

- (void)collectionView:(UICollectionView *)collectionView layout:(UICollectionViewLayout *)collectionViewLayout willBeginDraggingItemAtIndexPath:(NSIndexPath *)indexPath {
    
}

- (void)collectionView:(UICollectionView *)collectionView layout:(UICollectionViewLayout *)collectionViewLayout didBeginDraggingItemAtIndexPath:(NSIndexPath *)indexPath {
    //NSLog(@"did begin drag=====%d",indexPath.row);
}

- (void)collectionView:(UICollectionView *)collectionView layout:(UICollectionViewLayout *)collectionViewLayout willEndDraggingItemAtIndexPath:(NSIndexPath *)indexPath {
}

- (void)collectionView:(UICollectionView *)collectionView layout:(UICollectionViewLayout *)collectionViewLayout didEndDraggingItemAtIndexPath:(NSIndexPath *)indexPath {
    //NSLog(@"did end drag=====%d",indexPath.row);
}
#pragma mark - UICollectionViewDelegate
// 允许选中时，高亮
- (BOOL)collectionView:(UICollectionView *)collectionView shouldHighlightItemAtIndexPath:(NSIndexPath *)indexPath {
    return YES;
}
 /**
 * 如果Cell可以高亮，Cell变为高亮后调用该方法
 */
- (void)collectionView: (UICollectionView *)collectionView didHighlightItemAtIndexPath: (NSIndexPath *)indexPath{
#if 0
    [self changeHighlightCellWithIndexPath:indexPath];
#else
    
    
#endif
 }

// - (void)collectionView: (UICollectionView *)collectionView didUnhighlightItemAtIndexPath: (NSIndexPath *)indexPath{
//     [self changeHighlightCellWithIndexPath:self.lastIndexPath];
// 
// }
/** 拖动结束---交换数组中得数据 */
- (void)collectionView:(UICollectionView *)collectionView fromIndexPath:(NSIndexPath *)fromIndexPath endIndexPath:(NSIndexPath *)toIndexPath
{
    if(fromIndexPath.row==toIndexPath.row){
        return;
    }
    
    
    ALAsset * fromAsset=[self.mMedias objectAtIndex:fromIndexPath.row];
    
    [self.mMedias removeObjectAtIndex:fromIndexPath.row];
    
    [self.mMedias insertObject:fromAsset atIndex:toIndexPath.row];
    
    //
    id fromObj = self.hasBorders[fromIndexPath.row];
    [self.hasBorders removeObjectAtIndex:fromIndexPath.row];
    [self.hasBorders insertObject:fromObj atIndex:toIndexPath.row];
    
    [self.mMediaCollect reloadData];
    
    //
    if (delegate && [delegate respondsToSelector:@selector(movefromIndexPath: toIndexPath:)]) {
        [delegate movefromIndexPath:fromIndexPath toIndexPath:toIndexPath];
    }
}

/** 添加片段 */
-(void) addMedia:(ALAsset *)asset 
{
    [self.hasBorders addObject: (!(self.hasBorders.count) ? @(1) : @(0))];
    [self.mMedias addObject:asset];
    [self.mMediaCollect insertItemsAtIndexPaths:@[[NSIndexPath indexPathForItem:self.mMedias.count-1 inSection:0]]];
    //[self.mMediaCollect reloadData];
    [self setTotalCountLabel];
    //滚动到底部
    NSIndexPath * indexPath=[NSIndexPath indexPathForItem:self.mMedias.count-1 inSection:0];
    [self.mMediaCollect scrollToItemAtIndexPath:indexPath atScrollPosition:UICollectionViewScrollPositionBottom animated:YES];
    if (delegate!=nil && [delegate respondsToSelector:@selector(didDataChange:)]) {
        [delegate didDataChange:self];
    }
}

- (NSMutableArray *)hasBorders {
    if (!_hasBorders) {
        _hasBorders = [NSMutableArray array];
    }
    return _hasBorders;
}

- (NSIndexPath *)hasBorderIndexPath {
    if (!_hasBorderIndexPath) {
        _hasBorderIndexPath = [NSIndexPath indexPathForRow:0 inSection:0];
    }
    return _hasBorderIndexPath;
}

/** 获取当前的片段列表 */
-(NSMutableArray *) getMedias
{
    return self.mMedias;
}

/*
// Only override drawRect: if you perform custom drawing.
// An empty implementation adversely affects performance during animation.
- (void)drawRect:(CGRect)rect {
    // Drawing code
}
*/
/**
 2  * 根据高亮状态修改背景图片
 3  */
 - (void) changeHighlightCellWithIndexPath: (NSIndexPath *) indexPath{
     //获取当前变化的Cell
     UICollectionViewCell *currentHighlightCell = (UICollectionViewCell *)[self.mMediaCollect cellForItemAtIndexPath:indexPath];

//     [currentHighlightCell changeHighLightWithBool:currentHighlightCell.highlighted];

     if (currentHighlightCell.highlighted == YES){
         
         NSLog(@"第%ld个Section上第%ld个Cell变为高亮",self.lastIndexPath.row ,indexPath.row);
         currentHighlightCell.backgroundColor = [UIColor redColor];
         
         UICollectionViewCell *lastHighlightCell = (UICollectionViewCell *)[self.mMediaCollect cellForItemAtIndexPath:self.lastIndexPath];
          lastHighlightCell.backgroundColor = [UIColor clearColor];
         return;
     }

//     if (currentHighlightCell.highlighted == NO){
//          currentHighlightCell.backgroundColor = [UIColor clearColor];
//        NSLog(@"第%ld个Section上第%ld个Cell变为非高亮",indexPath.section ,indexPath.row);
//     }
 
 }

/**
 *  设置是否有边框
 */
- (void)setCellBorder:(NSIndexPath *)indexPath {
    
    UICollectionViewCell *currentHighlightCell = (UICollectionViewCell *)[self.mMediaCollect cellForItemAtIndexPath:indexPath];
    
    if (currentHighlightCell.highlighted == YES) {
        
        [self setCellBorderWithCell:currentHighlightCell hasBorder:YES];
        
        UICollectionViewCell *lastHighlightCell = (UICollectionViewCell *)[self.mMediaCollect cellForItemAtIndexPath:self.lastIndexPath];
        if (currentHighlightCell != lastHighlightCell) {
            [self setCellBorderWithCell:lastHighlightCell hasBorder:NO];
        }
        return;
    }
}

- (void)setCellBorderWithCell:(UICollectionViewCell *)cell hasBorder:(BOOL)hasBorder {
    StoryboardCell *sCell = (StoryboardCell *)cell;
    if (hasBorder) {
        
        //
        sCell.topView.hidden = NO;
        
        //
        sCell.assetImage.layer.borderWidth = 3;
        //红色
        //sCell.assetImage.layer.borderColor = [UIColor colorWithRed:227/255. green:39/255. blue:78/255. alpha:1].CGColor;
        //黄色的框
        sCell.assetImage.layer.borderColor = [UIColor yellowColor].CGColor;
        sCell.assetImage.layer.cornerRadius= 2;
        sCell.assetImage.clipsToBounds = YES;
    } else {
        
        sCell.topView.hidden = YES;
        //
        sCell.assetImage.layer.borderWidth = 0;
        sCell.assetImage.layer.cornerRadius= 0;
    }
}

- (NSIndexPath *)currentSelectedIndexPath {
    
    for (NSInteger i=0; i<self.hasBorders.count; i++) {
        if ([self.hasBorders[i] boolValue]) {
            return [NSIndexPath indexPathForRow:i inSection:0];
        }
    }
    return [NSIndexPath indexPathForRow:0 inSection:0];
}


@end
